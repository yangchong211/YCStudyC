//
// Created by 杨充 on 2023/6/6.
//



//面向对象程序设计
//C++ 完全支持面向对象的程序设计，包括面向对象开发的四大特性：
//封装（Encapsulation）：封装是将数据和方法组合在一起，对外部隐藏实现细节，只公开对外提供的接口。这样可以提高安全性、可靠性和灵活性。
//继承（Inheritance）：继承是从已有类中派生出新类，新类具有已有类的属性和方法，并且可以扩展或修改这些属性和方法。这样可以提高代码的复用性和可扩展性。
//多态（Polymorphism）：多态是指同一种操作作用于不同的对象，可以有不同的解释和实现。它可以通过接口或继承实现，可以提高代码的灵活性和可读性。
//抽象（Abstraction）：抽象是从具体的实例中提取共同的特征，形成抽象类或接口，以便于代码的复用和扩展。抽象类和接口可以让程序员专注于高层次的设计和业务逻辑，而不必关注底层的实现细节。
#include <iostream>
using namespace std;

// main() 是程序开始执行的地方
int main(){

    cout << "Hello World 哈哈哈 \n"; // 输出 Hello World
    //下一行 return 0; 终止 main( )函数，并向调用进程返回值 0。
    return 0;
}